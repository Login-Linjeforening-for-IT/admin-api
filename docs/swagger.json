{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/audiences": {
            "get": {
                "description": "Get all audiences",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audiences"
                ],
                "summary": "Get all audiences",
                "operationId": "get-audiences",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetAudiencesRow"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/audiences/{id}": {
            "get": {
                "description": "Get audience by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audiences"
                ],
                "summary": "Get audience by ID",
                "operationId": "get-audience",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Audience"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Get all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "operationId": "get-categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetCategoriesRow"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "description": "Get all cities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "Get all cities",
                "operationId": "get-all-cities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Get all events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get all events",
                "operationId": "get-events",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "historical",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetEventsRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Create event",
                "operationId": "create-event",
                "parameters": [
                    {
                        "description": "Event parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createEventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Foreign key violation",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Event already exists",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Update event",
                "operationId": "update-event",
                "parameters": [
                    {
                        "description": "Event parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Foreign key violation",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/events/audiences": {
            "post": {
                "description": "Add audience to event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Add audience to event",
                "operationId": "add-audience-to-event",
                "parameters": [
                    {
                        "description": "Audience parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.addAudienceToEventRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Foreign key violation",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Audience already exists",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove audience from event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Remove audience from event",
                "operationId": "remove-audience-from-event",
                "parameters": [
                    {
                        "description": "Audience parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.removeAudienceFromEventRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/events/organizations": {
            "post": {
                "description": "Add organization to event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Add organization to event",
                "operationId": "add-organization-to-event",
                "parameters": [
                    {
                        "description": "Organization parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.addOrganizationToEventRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Foreign key violation",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Organization already exists",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove organization from event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Remove organization from event",
                "operationId": "remove-organization-from-event",
                "parameters": [
                    {
                        "description": "Organization parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.removeOrganizationFromEventRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Get event by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event by ID",
                "operationId": "get-event",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EventDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete event by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Delete event by ID",
                "operationId": "delete-event",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/jobs": {
            "get": {
                "description": "Get a list of jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetJobsRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Create job",
                "parameters": [
                    {
                        "description": "Job details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createJobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetJobRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a job by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Update job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.UpdateJobParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetJobRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/cities": {
            "post": {
                "description": "Add a city to a job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Add city to job",
                "parameters": [
                    {
                        "description": "Job ID and city",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.addCityToJobRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a city from a job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Remove city from job",
                "parameters": [
                    {
                        "description": "Job ID and city",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.removeCityFromJobRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/skills": {
            "post": {
                "description": "Add a skill to a job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Add skill to job",
                "parameters": [
                    {
                        "description": "Job ID and skill",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.addSkillToJobRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/{id}": {
            "get": {
                "description": "Get a job by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetJobRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a job by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Delete job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetJobRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "description": "Get a list of locations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Get locations",
                "operationId": "get-locations",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - other",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetLocationsRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Create location",
                "parameters": [
                    {
                        "description": "Location data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a location by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Update location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.UpdateLocationParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "description": "Get a location by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Get location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a location by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Delete location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "description": "Get a list of organizations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get organizations",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetOrganizationsRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Create organization",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{shortname}": {
            "get": {
                "description": "Get an organization by shortname",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortname",
                        "name": "shortname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an organization by shortname",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Delete organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortname",
                        "name": "shortname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an organization by shortname",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Update organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortname",
                        "name": "shortname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.UpdateOrganizationParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/rules": {
            "get": {
                "description": "Get a list of rules",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rules"
                ],
                "summary": "Get rules",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetRulesRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rules"
                ],
                "summary": "Create rule",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Rule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/rules/{id}": {
            "get": {
                "description": "Get a rule by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rules"
                ],
                "summary": "Get rule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Rule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.addAudienceToEventRequest": {
            "type": "object",
            "required": [
                "audience",
                "event"
            ],
            "properties": {
                "audience": {
                    "type": "integer",
                    "minimum": 1
                },
                "event": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.addCityToJobRequest": {
            "type": "object",
            "required": [
                "city",
                "id"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "minLength": 1
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.addOrganizationToEventRequest": {
            "type": "object",
            "required": [
                "event",
                "organization"
            ],
            "properties": {
                "event": {
                    "type": "integer",
                    "minimum": 1
                },
                "organization": {
                    "type": "string"
                }
            }
        },
        "api.addSkillToJobRequest": {
            "type": "object",
            "required": [
                "id",
                "skill"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "skill": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "api.createEventRequest": {
            "type": "object",
            "required": [
                "category",
                "description_no",
                "link_discord",
                "link_facebook",
                "link_signup",
                "name_no",
                "time_start",
                "time_type"
            ],
            "properties": {
                "canceled": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "digital": {
                    "type": "boolean"
                },
                "full": {
                    "type": "boolean"
                },
                "highlight": {
                    "type": "boolean"
                },
                "image_banner": {
                    "type": "string"
                },
                "image_small": {
                    "type": "string"
                },
                "informational_en": {
                    "type": "string"
                },
                "informational_no": {
                    "type": "string"
                },
                "link_discord": {
                    "type": "string"
                },
                "link_facebook": {
                    "type": "string"
                },
                "link_signup": {
                    "type": "string"
                },
                "link_stream": {
                    "type": "string"
                },
                "location": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "parent": {
                    "type": "integer"
                },
                "rule": {
                    "type": "integer"
                },
                "time_end": {
                    "type": "string"
                },
                "time_publish": {
                    "type": "string"
                },
                "time_signup_deadline": {
                    "type": "string"
                },
                "time_signup_release": {
                    "type": "string"
                },
                "time_start": {
                    "type": "string"
                },
                "time_type": {
                    "$ref": "#/definitions/db.TimeTypeEnum"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "api.createJobRequest": {
            "type": "object",
            "required": [
                "application_deadline",
                "description_long_no",
                "description_short_no",
                "job_type",
                "position_title_no",
                "time_expire",
                "time_publish",
                "title_no"
            ],
            "properties": {
                "application_deadline": {
                    "type": "string"
                },
                "application_url": {
                    "type": "string"
                },
                "banner_image": {
                    "type": "string"
                },
                "description_long_en": {
                    "type": "string"
                },
                "description_long_no": {
                    "type": "string"
                },
                "description_short_en": {
                    "type": "string"
                },
                "description_short_no": {
                    "type": "string"
                },
                "highlight": {
                    "type": "boolean"
                },
                "job_type": {
                    "$ref": "#/definitions/db.JobType"
                },
                "organization": {
                    "type": "string"
                },
                "position_title_en": {
                    "type": "string"
                },
                "position_title_no": {
                    "type": "string"
                },
                "time_expire": {
                    "type": "string"
                },
                "time_publish": {
                    "type": "string"
                },
                "title_en": {
                    "type": "string"
                },
                "title_no": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "api.createLocationRequest": {
            "type": "object",
            "required": [
                "name_no",
                "type"
            ],
            "properties": {
                "address_postcode": {
                    "type": "integer"
                },
                "address_street": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "coordinate_lat": {
                    "type": "number"
                },
                "coordinate_long": {
                    "type": "number"
                },
                "mazemap_campus_id": {
                    "type": "integer"
                },
                "mazemap_poi_id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.LocationType"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "api.createOrganizationRequest": {
            "type": "object",
            "required": [
                "name_no",
                "shortname"
            ],
            "properties": {
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "link_facebook": {
                    "type": "string"
                },
                "link_homepage": {
                    "type": "string"
                },
                "link_instagram": {
                    "type": "string"
                },
                "link_linkedin": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string",
                    "minLength": 1
                },
                "shortname": {
                    "type": "string",
                    "minLength": 1
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "api.createRuleRequest": {
            "type": "object",
            "required": [
                "description_no",
                "name_no"
            ],
            "properties": {
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                }
            }
        },
        "api.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.removeAudienceFromEventRequest": {
            "type": "object",
            "required": [
                "audience",
                "event"
            ],
            "properties": {
                "audience": {
                    "type": "integer",
                    "minimum": 1
                },
                "event": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.removeCityFromJobRequest": {
            "type": "object",
            "required": [
                "city",
                "id"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "minLength": 1
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.removeOrganizationFromEventRequest": {
            "type": "object",
            "required": [
                "event",
                "organization"
            ],
            "properties": {
                "event": {
                    "type": "integer",
                    "minimum": 1
                },
                "organization": {
                    "type": "string"
                }
            }
        },
        "api.removeSkillFromJobRequest": {
            "type": "object",
            "required": [
                "id",
                "skill"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "skill": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "api.updateEventRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "canceled": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "digital": {
                    "type": "boolean"
                },
                "full": {
                    "type": "boolean"
                },
                "highlight": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "image_banner": {
                    "type": "string"
                },
                "image_small": {
                    "type": "string"
                },
                "informational_en": {
                    "type": "string"
                },
                "informational_no": {
                    "type": "string"
                },
                "link_discord": {
                    "type": "string"
                },
                "link_facebook": {
                    "type": "string"
                },
                "link_signup": {
                    "type": "string"
                },
                "link_stream": {
                    "type": "string"
                },
                "location": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "parent": {
                    "type": "integer"
                },
                "rule": {
                    "type": "integer"
                },
                "time_end": {
                    "type": "string"
                },
                "time_publish": {
                    "type": "string"
                },
                "time_signup_deadline": {
                    "type": "string"
                },
                "time_signup_release": {
                    "type": "string"
                },
                "time_start": {
                    "type": "string"
                },
                "time_type": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "db.Audience": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.Category": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.Event": {
            "type": "object",
            "properties": {
                "canceled": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "digital": {
                    "type": "boolean"
                },
                "full": {
                    "type": "boolean"
                },
                "highlight": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "image_banner": {
                    "type": "string"
                },
                "image_small": {
                    "type": "string"
                },
                "informational_en": {
                    "type": "string"
                },
                "informational_no": {
                    "type": "string"
                },
                "link_discord": {
                    "type": "string"
                },
                "link_facebook": {
                    "type": "string"
                },
                "link_signup": {
                    "type": "string"
                },
                "link_stream": {
                    "type": "string"
                },
                "location": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "parent": {
                    "type": "integer"
                },
                "rule": {
                    "type": "integer"
                },
                "time_end": {
                    "type": "string"
                },
                "time_publish": {
                    "type": "string"
                },
                "time_signup_deadline": {
                    "type": "string"
                },
                "time_signup_release": {
                    "type": "string"
                },
                "time_start": {
                    "type": "string"
                },
                "time_type": {
                    "$ref": "#/definitions/db.TimeTypeEnum"
                },
                "updated_at": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "db.GetAddressLocationsRow": {
            "type": "object",
            "properties": {
                "address_postcode": {
                    "type": "integer"
                },
                "address_street": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "db.GetAudiencesRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                }
            }
        },
        "db.GetCategoriesRow": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                }
            }
        },
        "db.GetCoordsLocationsRow": {
            "type": "object",
            "properties": {
                "coordinate_lat": {
                    "type": "number"
                },
                "coordinate_long": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "db.GetEventsRow": {
            "type": "object",
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "canceled": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "integer"
                },
                "category_name_en": {
                    "type": "string"
                },
                "category_name_no": {
                    "type": "string"
                },
                "full": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "link_signup": {
                    "type": "string"
                },
                "location_name_en": {
                    "type": "string"
                },
                "location_name_no": {
                    "type": "string"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "organizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time_end": {
                    "type": "string"
                },
                "time_publish": {
                    "type": "string"
                },
                "time_start": {
                    "type": "string"
                },
                "time_type": {
                    "$ref": "#/definitions/db.TimeTypeEnum"
                },
                "updated_at": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "db.GetJobRow": {
            "type": "object",
            "properties": {
                "application_deadline": {
                    "type": "string"
                },
                "application_url": {
                    "type": "string"
                },
                "banner_image": {
                    "type": "string"
                },
                "cities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description_long_en": {
                    "type": "string"
                },
                "description_long_no": {
                    "type": "string"
                },
                "description_short_en": {
                    "type": "string"
                },
                "description_short_no": {
                    "type": "string"
                },
                "highlight": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "job_type": {
                    "$ref": "#/definitions/db.JobType"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "position_title_en": {
                    "type": "string"
                },
                "position_title_no": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time_expire": {
                    "type": "string"
                },
                "time_publish": {
                    "type": "string"
                },
                "title_en": {
                    "type": "string"
                },
                "title_no": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "db.GetJobsRow": {
            "type": "object",
            "properties": {
                "application_deadline": {
                    "type": "string"
                },
                "application_url": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "job_type": {
                    "$ref": "#/definitions/db.JobType"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "position_title_en": {
                    "type": "string"
                },
                "position_title_no": {
                    "type": "string"
                },
                "time_publish": {
                    "type": "string"
                },
                "title_en": {
                    "type": "string"
                },
                "title_no": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "db.GetLocationsRow": {
            "type": "object",
            "properties": {
                "address_postcode": {
                    "type": "integer"
                },
                "address_street": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "coordinate_lat": {
                    "type": "number"
                },
                "coordinate_long": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "mazemap_campus_id": {
                    "type": "integer"
                },
                "mazemap_poi_id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.LocationType"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "db.GetMazemapLocationsRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "mazemap_campus_id": {
                    "type": "integer"
                },
                "mazemap_poi_id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "db.GetOrganizationsOfEventRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "link_facebook": {
                    "type": "string"
                },
                "link_homepage": {
                    "type": "string"
                },
                "link_instagram": {
                    "type": "string"
                },
                "link_linkedin": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.GetOrganizationsRow": {
            "type": "object",
            "properties": {
                "is_deleted": {
                    "type": "boolean"
                },
                "link_homepage": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.GetRulesRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                }
            }
        },
        "db.JobType": {
            "type": "string",
            "enum": [
                "full",
                "part",
                "summer",
                "verv"
            ],
            "x-enum-varnames": [
                "JobTypeFull",
                "JobTypePart",
                "JobTypeSummer",
                "JobTypeVerv"
            ]
        },
        "db.Location": {
            "type": "object",
            "properties": {
                "address_postcode": {
                    "type": "integer"
                },
                "address_street": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "coordinate_lat": {
                    "type": "number"
                },
                "coordinate_long": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mazemap_campus_id": {
                    "type": "integer"
                },
                "mazemap_poi_id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.LocationType"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "db.LocationType": {
            "type": "string",
            "enum": [
                "mazemap",
                "coords",
                "address",
                "none"
            ],
            "x-enum-varnames": [
                "LocationTypeMazemap",
                "LocationTypeCoords",
                "LocationTypeAddress",
                "LocationTypeNone"
            ]
        },
        "db.Organization": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "link_facebook": {
                    "type": "string"
                },
                "link_homepage": {
                    "type": "string"
                },
                "link_instagram": {
                    "type": "string"
                },
                "link_linkedin": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.Rule": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.TimeTypeEnum": {
            "type": "string",
            "enum": [
                "default",
                "no_end",
                "whole_day",
                "tbd"
            ],
            "x-enum-varnames": [
                "TimeTypeEnumDefault",
                "TimeTypeEnumNoEnd",
                "TimeTypeEnumWholeDay",
                "TimeTypeEnumTbd"
            ]
        },
        "db.UpdateJobParams": {
            "type": "object",
            "properties": {
                "application_deadline": {
                    "type": "string"
                },
                "application_url": {
                    "type": "string"
                },
                "banner_image": {
                    "type": "string"
                },
                "description_long_en": {
                    "type": "string"
                },
                "description_long_no": {
                    "type": "string"
                },
                "description_short_en": {
                    "type": "string"
                },
                "description_short_no": {
                    "type": "string"
                },
                "highlight": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "job_type": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "position_title_en": {
                    "type": "string"
                },
                "position_title_no": {
                    "type": "string"
                },
                "time_expire": {
                    "type": "string"
                },
                "time_publish": {
                    "type": "string"
                },
                "title_en": {
                    "type": "string"
                },
                "title_no": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "db.UpdateLocationParams": {
            "type": "object",
            "properties": {
                "address_postcode": {
                    "type": "integer"
                },
                "address_street": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "coordinate_lat": {
                    "type": "number"
                },
                "coordinate_long": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "mazemap_campus_id": {
                    "type": "integer"
                },
                "mazemap_poi_id": {
                    "type": "integer"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "db.UpdateOrganizationParams": {
            "type": "object",
            "properties": {
                "description_en": {
                    "type": "string"
                },
                "description_no": {
                    "type": "string"
                },
                "link_facebook": {
                    "type": "string"
                },
                "link_homepage": {
                    "type": "string"
                },
                "link_instagram": {
                    "type": "string"
                },
                "link_linkedin": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name_en": {
                    "type": "string"
                },
                "name_no": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "service.EventDetails": {
            "type": "object",
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Audience"
                    }
                },
                "category": {
                    "$ref": "#/definitions/db.Category"
                },
                "event": {
                    "$ref": "#/definitions/db.Event"
                },
                "location": {
                    "$ref": "#/definitions/db.Location"
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetOrganizationsOfEventRow"
                    }
                },
                "rule": {
                    "$ref": "#/definitions/db.Rule"
                }
            }
        }
    }
}